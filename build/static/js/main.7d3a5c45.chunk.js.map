{"version":3,"sources":["2.06.phonebook/components/Filter.tsx","2.06.phonebook/components/Person.tsx","2.06.phonebook/components/PersonForm.tsx","2.06.phonebook/components/Notification.tsx","2.06.phonebook/services.ts","2.06.phonebook/PhoneBook.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Filter","newFilter","filterChangeHandler","value","onChange","Person","personsToShow","deletePerson","map","person","name","number","onClick","id","PersonForm","newName","nameChangeHandler","newNumber","numberChangeHandler","addPerson","onSubmit","type","Notification","message","className","baseUrl","personService","axios","get","then","response","data","newPerson","post","catch","error","Error","delete","put","PhoneBook","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","newNotification","setNotification","useEffect","filter","toLowerCase","includes","helper","toggleNotification","setTimeout","event","target","preventDefault","found","find","window","confirm","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAeeA,EARA,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,oBAC1B,OACE,qDACoB,uBAAOC,MAAOF,EAAWG,SAAUF,QCM5CG,EAbA,SAAC,GAAuF,IAAtFC,EAAqF,EAArFA,cAAeC,EAAsE,EAAtEA,aAC9B,OACE,mCACGD,EAAcE,KAAI,SAAAC,GAAM,OACvB,gCACGA,EAAOC,KADV,IACiBD,EAAOE,OACtB,wBAAQC,QAAS,kBAAML,EAAaE,IAApC,sBAFQA,EAAOI,UCmBVC,EAhBI,SAAC,GAA+F,IAA9FC,EAA6F,EAA7FA,QAASC,EAAoF,EAApFA,kBAAmBC,EAAiE,EAAjEA,UAAWC,EAAsD,EAAtDA,oBAAqBC,EAAiC,EAAjCA,UAC/E,OACE,uBAAMC,SAAUD,EAAhB,UACE,yCACQ,uBAAOhB,MAAOY,EAASX,SAAUY,OAEzC,2CACU,uBAAOb,MAAOc,EAAWb,SAAUc,OAE7C,8BACE,wBAAQG,KAAK,SAAb,uBCTOC,G,MARM,SAAC,GAAuD,IAAtDD,EAAqD,EAArDA,KAAME,EAA+C,EAA/CA,QAC3B,OACE,qBAAKC,UAAW,gBAAkBH,EAAlC,SACGE,M,gBCHDE,EAAU,eAEHC,EACH,WACN,OAAOC,IAAMC,IAAIH,GACdI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHpBL,EAMH,SAACM,GACP,OAAOL,IAAMM,KAAKR,EAASO,GACxBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BG,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAML,SAASC,KAAKI,WAV/BT,EAcH,SAACb,GACP,OAAOc,IAAMU,OAAOZ,EAAU,IAAMZ,GACjCgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAhBpBL,EAmBH,SAACb,EAAYmB,GACnB,OAAOL,IAAMW,IAAIb,EAAU,IAAMZ,EAAImB,GAClCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BG,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAML,SAASC,KAAKI,WCsG7BI,EA1HG,WAChB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOzB,EAAP,KAAgB4B,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOvB,EAAP,KAAkB2B,EAAlB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOvC,EAAP,KAAkB4C,EAAlB,KACA,EAA2CL,mBAAS,CAACnB,KAAM,GAAIE,QAAS,KAAxE,mBAAOuB,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACRtB,IAAuBG,MAAK,SAACE,GAC3BW,EAAWX,QAEZ,IAEH,IAiEMzB,EAAgBmC,EAAQQ,QAAO,SAAAxC,GAAM,OACzCA,EAAOC,KAAKwC,cAAcC,SAASlD,EAAUiD,kBAGzCE,EAAS,CACbC,mBAAoB,SAAChC,EAAcE,GACjCwB,EAAgB,CACd1B,KAAMA,EACNE,QAASA,IAEX+B,YAAW,WACTP,EAAgB,CACd1B,KAAM,GACNE,QAAS,OAEV,OAIP,OACE,gCACE,2CACA,cAAC,EAAD,CAAcF,KAAMyB,EAAgBzB,KAAME,QAASuB,EAAgBvB,UACnE,cAAC,EAAD,CACEtB,UAAWA,EACXC,oBA7BsB,SAACqD,GAC3BV,EAAaU,EAAMC,OAAOrD,UA8BxB,2CACA,cAAC,EAAD,CACEY,QAASA,EACTC,kBA1CoB,SAACuC,GACzBZ,EAAWY,EAAMC,OAAOrD,QA0CpBc,UAAWA,EACXC,oBAxCsB,SAACqC,GAC3BX,EAAaW,EAAMC,OAAOrD,QAwCtBgB,UAlGY,SAACoC,GACjBA,EAAME,iBACN,IAAMzB,EAAyB,CAC7BtB,KAAMK,EACNJ,OAAQM,GAEJyC,EAAQjB,EAAQkB,MAAK,SAAAlD,GAAM,OAAIA,EAAOC,OAASK,KACjD2C,EACEE,OAAOC,QAAP,UAAkB9C,EAAlB,4EACFW,EAAqBgC,EAAM7C,GAAcmB,GACtCH,MAAK,SAACE,GACLqB,EAAOC,mBAAmB,UAA1B,gBAA8CtC,IAC9C2B,EAAWD,EAAQjC,KAAI,SAAAC,GACrB,OAAIA,EAAOI,KAAOkB,EAAKlB,GACdkB,EAEAtB,MAGXkC,EAAW,IACXC,EAAa,OAEdV,OAAM,SAAAC,GACLiB,EAAOC,mBAAmB,QAASlB,EAAMZ,YAI/CG,EAAqBM,GAClBH,MAAK,SAACE,GACLqB,EAAOC,mBAAmB,UAA1B,gBAA8CtC,IAC9C2B,EAAWD,EAAQqB,OAAO/B,IAC1BY,EAAW,IACXC,EAAa,OAEdV,OAAM,SAAAC,GACLiB,EAAOC,mBAAmB,QAASlB,EAAMZ,eAiE7C,yCACA,cAAC,EAAD,CACEjB,cAAeA,EACfC,aA/De,SAACA,GAChBqD,OAAOC,QAAP,iBAAyBtD,EAAaG,KAAtC,OACFgB,EACUnB,EAAaM,IACpBgB,MAAK,WACJa,EAAWD,EAAQQ,QAAO,SAAAxC,GAAM,OAAIA,EAAOI,KAAON,EAAaM,UAEhEqB,OAAM,WACLkB,EAAOC,mBAAmB,QAA1B,UAAsC9C,EAAaG,KAAnD,wCCpDKqD,EAVH,WACV,OAIE,aAHA,CAGC,EAAD,KCEWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d3a5c45.chunk.js","sourcesContent":["import React, { ChangeEventHandler } from 'react'\r\n\r\ninterface FilterProps {\r\n  newFilter: string,\r\n  filterChangeHandler: ChangeEventHandler<HTMLInputElement>\r\n}\r\n\r\nconst Filter = ({newFilter, filterChangeHandler} : FilterProps) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={newFilter} onChange={filterChangeHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React from 'react'\r\nimport { PersonProps } from '../type';\r\n\r\nconst Person = ({personsToShow, deletePerson} : {personsToShow: PersonProps[], deletePerson: any}) => {\r\n  return (\r\n    <>\r\n      {personsToShow.map(person => \r\n        <div key={person.id}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => deletePerson(person)}>delete</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;","import React, { ChangeEventHandler, FormEventHandler } from 'react'\r\n\r\ninterface PersonFormProps {\r\n  newName: string,\r\n  nameChangeHandler: ChangeEventHandler<HTMLInputElement>\r\n  newNumber: string,\r\n  numberChangeHandler: ChangeEventHandler<HTMLInputElement>\r\n  addPerson: FormEventHandler<HTMLFormElement>,\r\n}\r\n\r\nconst PersonForm = ({newName, nameChangeHandler, newNumber, numberChangeHandler, addPerson} : PersonFormProps) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={nameChangeHandler} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={numberChangeHandler} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;","import React from 'react'\r\nimport '../phoneBook.css'\r\n\r\nconst Notification = ({type, message} : {type: string, message: string}) => {\r\n  return (\r\n    <div className={\"notification \" + type}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import axios from \"axios\";\r\nimport { PersonProps } from \"./type\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nexport const personService = {\r\n  getAll: () => {\r\n    return axios.get(baseUrl)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  create: (newPerson: PersonProps) => {\r\n    return axios.post(baseUrl, newPerson)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw new Error(error.response.data.error)\r\n      });\r\n  },\r\n\r\n  delete: (id: number) => {\r\n    return axios.delete(baseUrl + '/' + id)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  update: (id: number, newPerson: PersonProps) => {\r\n    return axios.put(baseUrl + '/' + id, newPerson)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw new Error(error.response.data.error)\r\n      });\r\n  }\r\n};\r\n","import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react'\r\nimport Filter from './components/Filter';\r\nimport Person from './components/Person';\r\nimport PersonForm from './components/PersonForm';\r\nimport Notification from './components/Notification';\r\nimport { PersonProps } from './type';\r\nimport { personService } from './services';\r\n\r\nconst PhoneBook = () => {\r\n  const [persons, setPersons] = useState([] as PersonProps[]) \r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [newNotification, setNotification] = useState({type: '', message: ''});\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((data: PersonProps[]) => {\r\n      setPersons(data);\r\n    });\r\n  }, []);\r\n\r\n  const addPerson = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const newPerson: PersonProps = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n    const found = persons.find(person => person.name === newName);\r\n    if (found) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        personService.update(found.id as number, newPerson)\r\n          .then((data: PersonProps) => {\r\n            helper.toggleNotification('success', `Added ${newName}`);\r\n            setPersons(persons.map(person => {\r\n              if (person.id === data.id) {\r\n                return data;\r\n              } else {\r\n                return person;\r\n              }\r\n            }));\r\n            setNewName('');\r\n            setNewNumber('');\r\n          })\r\n          .catch(error => {\r\n            helper.toggleNotification('error', error.message);\r\n          });\r\n      }\r\n    } else {\r\n      personService.create(newPerson)\r\n        .then((data: PersonProps) => {\r\n          helper.toggleNotification('success', `Added ${newName}`);\r\n          setPersons(persons.concat(data));\r\n          setNewName('');\r\n          setNewNumber('');\r\n        })\r\n        .catch(error => {\r\n          helper.toggleNotification('error', error.message);\r\n        })\r\n    }\r\n  };\r\n\r\n  const deletePerson = (deletePerson: PersonProps) => {\r\n    if (window.confirm(`Delete ${deletePerson.name}?`)) {\r\n      personService\r\n        .delete(deletePerson.id as number)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== deletePerson.id));\r\n        })\r\n        .catch(() => {\r\n          helper.toggleNotification('error', `${deletePerson.name} does not exist in server`)\r\n        });\r\n    }\r\n  };\r\n\r\n  const nameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewName(event.target.value);\r\n  };\r\n  \r\n  const numberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n  \r\n  const filterChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewFilter(event.target.value);\r\n  };\r\n\r\n  const personsToShow = persons.filter(person =>\r\n    person.name.toLowerCase().includes(newFilter.toLowerCase())\r\n  );\r\n\r\n  const helper = {\r\n    toggleNotification: (type: string, message: string) => {\r\n      setNotification({\r\n        type: type,\r\n        message: message,\r\n      })\r\n      setTimeout(() => {\r\n        setNotification({\r\n          type: '',\r\n          message: '',\r\n        })\r\n      }, 5000)\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification type={newNotification.type} message={newNotification.message}></Notification>\r\n      <Filter\r\n        newFilter={newFilter}\r\n        filterChangeHandler={filterChangeHandler}\r\n      ></Filter>\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        newName={newName}\r\n        nameChangeHandler={nameChangeHandler}\r\n        newNumber={newNumber}\r\n        numberChangeHandler={numberChangeHandler}\r\n        addPerson={addPerson}\r\n      ></PersonForm>\r\n      <h2>Numbers</h2>\r\n      <Person\r\n        personsToShow={personsToShow}\r\n        deletePerson={deletePerson}\r\n      ></Person>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhoneBook","import React from 'react'\n// import Unicafe from './unicafe/Unicafe';\n// import Anecdotes from './anecdotes/Anecdotes';\n// import Course from './course/Course'\nimport PhoneBook from './2.06.phonebook/PhoneBook'\n// import Country from './2.12.country/Country';\n\nconst App = () => {\n  return (\n    // <Unicafe></Unicafe>\n    // <Anecdotes></Anecdotes>\n    // <Course></Course>\n    <PhoneBook></PhoneBook>\n    // <Country></Country>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}